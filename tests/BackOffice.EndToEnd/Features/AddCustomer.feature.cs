// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BackOffice.EndToEnd.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AddCustomer")]
    [NUnit.Framework.CategoryAttribute("AddCustomer")]
    public partial class AddCustomerFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "AddCustomer"};
        
#line 1 "AddCustomer.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "AddCustomer", "    As a staff member, I want to add a new customer to the system so that I can k" +
                    "eep track of their information.", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 Navigate to add add customer page")]
        [NUnit.Framework.CategoryAttribute("NavigateToCustomerPage")]
        public void _1NavigateToAddAddCustomerPage()
        {
            string[] tagsOfScenario = new string[] {
                    "NavigateToCustomerPage"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 Navigate to add add customer page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("that the staff member is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And("on the customer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.When("the staff member clicks on the \"Add Customer\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
    testRunner.Then("they should be redirected to the \"Add Customer\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2 Add a customer successfully")]
        [NUnit.Framework.CategoryAttribute("AddSuccess")]
        public void _2AddACustomerSuccessfully()
        {
            string[] tagsOfScenario = new string[] {
                    "AddSuccess"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2 Add a customer successfully", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 14
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 15
 testRunner.Given("that the staff member is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 16
 testRunner.And("on the \"Add Customer\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.When("the staff member fills in the customer\'s information with Full Name: \"John Doe\", " +
                        "Email: \"johndoes@exmaple.com\", Phone: \"1234567890\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
 testRunner.And("with Address information with Street: \"1234 Example St\", City: \"Example City\", Pr" +
                        "ovince: \"Example Province\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("with Password: \"p@ssw0rD\" and Confirm Password: \"p@ssw0rD\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.Then("the staff member should see a success message that the customer has been added to" +
                        " the system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
 testRunner.And("the staff member should be redirected to the manage staff page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("3 Add a customer successfully with default password")]
        [NUnit.Framework.CategoryAttribute("AddSuccessWithDefaultPassword")]
        public void _3AddACustomerSuccessfullyWithDefaultPassword()
        {
            string[] tagsOfScenario = new string[] {
                    "AddSuccessWithDefaultPassword"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3 Add a customer successfully with default password", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 24
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 25
 testRunner.Given("that the staff member is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 26
 testRunner.And("on the \"Add Customer\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.When("the staff member fills in the customer\'s information with Full Name: \"John Doe\", " +
                        "Email: \"johndoes@exmaple.com\", Phone: \"1234567890\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 28
 testRunner.And("with Address information with Street: \"1234 Example St\", City: \"Example City\", Pr" +
                        "ovince: \"Example Province\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("click on the checkbox \"Set default password P@ssw0rd\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.Then("the staff member should see a success message that the customer has been added to" +
                        " the system with the default password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.And("the staff member should be redirected to the manage staff page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("4 Add a customer with invalid information")]
        [NUnit.Framework.CategoryAttribute("AddFail")]
        [NUnit.Framework.TestCaseAttribute("\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"Full Name is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"Email is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"Phone is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"1234567890\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"Street is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"1234567890\"", "\"1234 Example St\"", "\"\"", "\"\"", "\"\"", "\"\"", "\"City is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"1234567890\"", "\"1234 Example St\"", "\"Example City\"", "\"\"", "\"\"", "\"\"", "\"Province is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"1234567890\"", "\"1234 Example St\"", "\"Example City\"", "\"Example Province\"", "\"\"", "\"\"", "\"Password is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"1234567890\"", "\"1234 Example St\"", "\"Example City\"", "\"Example Province\"", "\"p@ssw0rD\"", "\"\"", "\"Confirm Password is required\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes.email.com\"", "\"1234567890\"", "\"1234 Example St\"", "\"Example City\"", "\"Example Province\"", "\"p@ssw0rD\"", "\"p@ssw0rD\"", "\"Email is invalid\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"123\"", "\"1234 Example St\"", "\"Example City\"", "\"Example Province\"", "\"p@ssw0rD\"", "\"p@ssw0rD\"", "\"Phone is invalid\"", null)]
        [NUnit.Framework.TestCaseAttribute("\"John Doe\"", "\"johndoes@exmaple.com\"", "\"1234567890\"", "\"1234 Example St\"", "\"Example City\"", "\"Example Province\"", "\"p\"", "\"p\"", "\"Password must contain at least one uppercase letter, one lowercase letter, one n" +
            "umber and 8-15 characters\"", null)]
        public void _4AddACustomerWithInvalidInformation(string full_Name, string email, string phone, string street, string city, string province, string password, string confirm_Password, string error_Message, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AddFail"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("full_name", full_Name);
            argumentsOfScenario.Add("email", email);
            argumentsOfScenario.Add("phone", phone);
            argumentsOfScenario.Add("street", street);
            argumentsOfScenario.Add("city", city);
            argumentsOfScenario.Add("province", province);
            argumentsOfScenario.Add("password", password);
            argumentsOfScenario.Add("confirm_password", confirm_Password);
            argumentsOfScenario.Add("error_message", error_Message);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("4 Add a customer with invalid information", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 34
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 35
 testRunner.Given("that the staff member is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 36
 testRunner.And("on the \"Add Customer\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.When(string.Format("the staff member fills in the customer\'s information with Full Name: \"{0}\", Email" +
                            ": \"{1}\", Phone: \"{2}\"", full_Name, email, phone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 38
 testRunner.And(string.Format("with Address information with Street: \"{0}\", City: \"{1}\", Province: \"{2}\"", street, city, province), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And(string.Format("with Password: \"{0}\" and Confirm Password: \"{1}\"", password, confirm_Password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.Then(string.Format("the staff member should see an error message \"{0}\"", error_Message), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
