version: "3.9"

services:
  postgres:
    image: postgres:16.2-alpine3.19
    container_name: postgres
    ports:
      - "5400:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=drugstore
      - PGDATA=/data/postgres
    command:
      - bash
      - -c
      - docker-entrypoint.sh -c config_file=/etc/postgresql/postgres.conf -c hba_file=/etc/postgresql/pg_hba.conf
    volumes:
      - ./vol/postgres:/data/postgres
      - ./docker/postgresql:/etc/postgresql
    restart: unless-stopped
    networks:
      - bridge-network

  pgadmin:
    image: dpage/pgadmin4:8.4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: drugstore
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./vol/pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
    networks:
      - bridge-network

  redis:
    image: redis/redis-stack:7.2.0-v9
    container_name: redis
    ports:
      - 6370:6379
    volumes:
      - ./vol/redis:/data
    restart: unless-stopped
    networks:
      - bridge-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    volumes:
      - ./vol/kafka:/var/lib/kafka
    environment:
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
      - 29092:29092
    restart: unless-stopped
    networks:
      - bridge-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.6.0
    container_name: kafka-connect
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt debezium/debezium-connector-postgresql:2.2.1
        confluent connect plugin installjcustenborder/kafka-connect-redis:latest
        echo "Launching Kafka Connect"
        /etc/confluent/docker/run
    volumes:
      - ./vol/kafka-connect:/var/lib/kafka-connect
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_GROUP_ID: categories-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _categories-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _categories-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _categories-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    ports:
      - 8083:8083
    restart: unless-stopped
    depends_on:
      - kafka
    networks:
      - bridge-network

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: post
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - kafka
      - kafka-connect
    restart: unless-stopped
    networks:
      - bridge-network

volumes:
  postgres:
  redis:
  kafka:

networks:
  bridge-network:
    name: bridge-network
    driver: bridge
