@page "/products"
@using DrugStore.BackOffice.Components.Pages.Products.Response
@inject IConfiguration Configuration

<PageTitle>Products List</PageTitle>

<RadzenBreadCrumb>
    <RadzenBreadCrumbItem Path="/" Text="Home"/>
    <RadzenBreadCrumbItem Text="Products"/>
</RadzenBreadCrumb>

<RadzenRow>
    <RadzenColumn SizeMD="9">
        <RadzenLabel Style="font-weight: bold"
                     Text="Loading data was failed. Please reload."
                     Visible="_error" />
    </RadzenColumn>
    <RadzenColumn SizeMD="3">
        <RadzenButton ButtonStyle="ButtonStyle.Secondary"
                      Icon="autorenew"
                      Style="margin-bottom: 20px"
                      Text="Reload"
                      Visible="_error"
                      Click="OnInitializedAsync" />
    </RadzenColumn>
</RadzenRow>
<RadzenStack>
    <RadzenRow AlignItems="AlignItems.Center">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenText Text="Products" TextStyle="TextStyle.H3" TagName="TagName.H1" Style="margin: 0"/>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack Orientation="Orientation.Horizontal"
                         AlignItems="AlignItems.Center"
                         JustifyContent="JustifyContent.End"
                         Gap="0.5rem">
                <RadzenButton Icon="get_app"
                              Text="Export CSV"
                              ButtonStyle="ButtonStyle.Primary"
                              Shade="Shade.Lighter"
                              Variant="Variant.Flat"
                              Click="ExportClick" />
                <RadzenButton Icon="add_circle_outline"
                              Text="Add category"
                              ButtonStyle="ButtonStyle.Primary"
                              Variant="Variant.Flat"
                              Click="AddProducts"/>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenTextBox Placeholder="Search ..." 
                   Style="display: block; width: 100%" 
                   @oninput="Search"
                   aria-label="Search by product name" />
    <RadzenRow>
        <RadzenColumn SizeMD="12">
            <RadzenDataGrid @ref="_dataGrid"
                            Data="_products"
                            IsLoading="_loading"
                            TItem="Product"
                            AllowPaging="true"
                            AllowFiltering="true"
                            AllowSorting="true"
                            AllowColumnResize="true"
                            AllowAlternatingRows="false"
                            PageSize="20"
                            ColumnWidth="300px"
                            ShowPagingSummary="true"
                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            Count="_count">
                <EmptyTemplate>
                    <RadzenText Style="color: lightgrey; font-size: 24px; margin: 2rem;"
                                TagName="TagName.P" TextAlign="TextAlign.Center">
                        No products found
                    </RadzenText>
                </EmptyTemplate>
                <LoadingTemplate>
                    <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Primary"
                                               Value="100"
                                               ShowValue="false"
                                               Mode="ProgressBarMode.Indeterminate"/>
                </LoadingTemplate>
                <Columns>
                    <RadzenDataGridColumn TItem="Product"
                                          Frozen="true"
                                          Width="130px"
                                          Property="@nameof(Product.Name)"
                                          Title="@nameof(Product.Name)"/>
                    <RadzenDataGridColumn TItem="Product"
                                          Title="Photo"
                                          TextAlign="TextAlign.Center"
                                          Frozen="true"
                                          Sortable="false"
                                          Filterable="false"
                                          Width="100px">
                        <Template Context="product">
                            @if (product.Image is not null && !string.IsNullOrWhiteSpace(product.Image.ImageUrl))
                            {
                                <RadzenImage Path="@(string.Concat(Configuration.GetSection(nameof(Settings)).Get<Settings>()?.StaticFileEndpoint, product.Image?.ImageUrl))"
                                             class="rz-gravatar"
                                             AlternateText="@product.Image?.Alt"/>
                            }
                            else
                            {
                                <RadzenImage Path="https://fakeimg.pl/100x100?text=No+image"
                                             class="rz-gravatar"
                                             AlternateText="No image"/>
                            }
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Product"
                                          Width="130px"
                                          Property="@nameof(Product.ProductCode)"
                                          Title="Code"/>
                    <RadzenDataGridColumn TItem="Product"
                                          Width="350px"
                                          Property="@nameof(Product.Detail)"
                                          Title="@nameof(Product.Detail)"/>
                    <RadzenDataGridColumn TItem="Product"
                                          Width="120px"
                                          TextAlign="TextAlign.Center"
                                          Property="@nameof(Product.Status)"
                                          Title="@nameof(Product.Status)">
                        <Template Context="product">
                            <RadzenBadge class="price-badge"
                                         Shade="Shade.Lighter"
                                         Variant="Variant.Flat"
                                         Text="@product.Status"
                                         BadgeStyle="@(product.Status switch { "InStock" => BadgeStyle.Success, "OutOfStock" => BadgeStyle.Warning, _ => BadgeStyle.Danger })"/>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Product"
                                          Width="140px"
                                          TextAlign="TextAlign.Center"
                                          Property="@nameof(Product.Quantity)"
                                          Title="@nameof(Product.Quantity)"/>
                    <RadzenDataGridColumn TItem="Product"
                                          Width="160px"
                                          Property="@nameof(Product.Category)"
                                          Title="@nameof(Product.Category)"/>
                    <RadzenDataGridColumn TItem="Product"
                                          Filterable="false"
                                          Sortable="false"
                                          TextAlign="TextAlign.Center"
                                          Property="@nameof(Product.Price)"
                                          Title="@nameof(Product.Price)">
                        <Columns>
                            <RadzenDataGridColumn TItem="Product"
                                                  TextAlign="TextAlign.Center"
                                                  Property="@nameof(Product.Price.Price)"
                                                  Title="@nameof(Product.Price.Price)">
                                <Template Context="product">
                                    @product.Price?.Price.ToString("C")
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="Product"
                                                  TextAlign="TextAlign.Center"
                                                  Property="@nameof(Product.Price.PriceSale)"
                                                  Title="Price Sale">
                                <Template Context="product">
                                    @product.Price?.PriceSale.ToString("C")
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Product"
                                          Width="100px"
                                          Frozen="true"
                                          FrozenPosition="FrozenColumnPosition.Right"
                                          Filterable="false"
                                          Sortable="false">
                        <Template Context="product">
                            <RadzenButton Icon="edit"
                                          ButtonStyle="ButtonStyle.Warning"
                                          Variant="Variant.Flat"
                                          Shade="Shade.Lighter"
                                          Size="ButtonSize.Medium"
                                          Click="() => EditProduct(product.Id)"/>
                            <RadzenButton ButtonStyle="ButtonStyle.Danger"
                                          Icon="delete"
                                          Variant="Variant.Flat"
                                          Shade="Shade.Lighter"
                                          Size="ButtonSize.Medium"
                                          class="my-1 ms-1"
                                          Click="() => DeleteProduct(product.Id, product.Image?.ImageUrl)"/>
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>